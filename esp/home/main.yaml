esphome:
  name: communifarm-device
  friendly_name: CommuniFarm Device
  platform: ESP32
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API for auto-discovery
api:
  encryption:
    key: !secret api_encryption_key

# Enable OTA updates
ota:
  password: !secret ota_password

# WiFi configuration with captive portal for setup
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # Enable captive portal for initial setup
  ap:
    ssid: "CommuniFarm Setup"
    password: "setup123456"

# Enable web server for configuration
web_server:
  port: 80
  include_internal: true

# Enable captive portal for WiFi setup
captive_portal:

# Enable MDNS for easy discovery
mdns:
  services:
    - service: _esphomelib._tcp
      protocol: _tcp
      port: 6053
    - service: _http._tcp
      protocol: _tcp
      port: 80

# Text sensor for device status
text_sensor:
  - platform: template
    name: "Device Status"
    id: device_status
    update_interval: 30s
    lambda: |-
      return "Online - " + id(wifi).get_ssid().c_str();

# Binary sensor for WiFi connection status
binary_sensor:
  - platform: status
    name: "WiFi Status"
    id: wifi_status

# Sensors
sensor:
  # DHT22 Temperature and Humidity
  - platform: dht
    pin: GPIO4
    temperature:
      name: "Temperature"
      id: temperature
      unit_of_measurement: "°C"
      accuracy_decimals: 1
    humidity:
      name: "Humidity"
      id: humidity
      unit_of_measurement: "%"
      accuracy_decimals: 1
    update_interval: 30s
    id: dht_sensor

# Switches
switch:
  # Water Pump
  - platform: gpio
    pin: GPIO2
    name: "Water Pump"
    id: water_pump
    restore_mode: ALWAYS_OFF
  # Fan
  - platform: gpio
    pin: GPIO3
    name: "Fan"
    id: fan
    restore_mode: ALWAYS_OFF

# GPIO Pins for sensors
gpio:
  - pin: GPIO4
    mode: INPUT_PULLUP
    id: dht_pin

# Time for scheduling
time:
  - platform: sntp
    id: sntp_time
    servers:
      - pool.ntp.org
      - time.nist.gov

# Interval for periodic updates
interval:
  - interval: 30s
    then:
      - lambda: |-
          // Update device status
          id(device_status).publish_state("Online - " + id(wifi).get_ssid().c_str());

# MQTT for additional communication (optional)
mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
  discovery_prefix: homeassistant